Infrastructure as Code - Week 2 | Coursera





ExploreOnline DegreesDegreesOnline DegreeExplore Bachelorâs & Masterâs degreesMasterTrackâ¢Earn credit towards a Masterâs degreeUniversity CertificatesAdvance your career with graduate-level learningFind your New CareerFor EnterpriseFor UniversitiesBrowseTop CoursesLog InJoin for FreeListInfrastructure as CodeLoading...DevOps on AWS: Release and DeployAmazon Web ServicesFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)Â |Â 7.8K Students EnrolledCourse 3 of 4 in the DevOps on AWS SpecializationEnroll for FreeThis CourseVideo TranscriptAWS provides a set of flexible services designed to enable companies to more rapidly and reliably build and deliver products using AWS and DevOps practices. These services simplify provisioning and managing infrastructure, deploying application code, automating software release processes, and monitoring your application and infrastructure performance. 

The third course in the series explains how to improve the deployment process with DevOps methodology, and also some tools that might make deployments easier, such as Infrastructure as Code, or IaC, and AWS CodeDeploy.

The course begins with reviewing topics covered in the first course of the DevOps on AWS series. You will learn about the differences between continuous integration, continuous delivery, and continuous deployment. In Exercises 1 and 2, you will set up AWS CodeDeploy and make revisions that will then be deployed. If you use AWS Lambda, you will explore ways to address additional considerations when you deploy updates to your Lambda functions.

Next, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.View SyllabusSkills You'll Learnaws, Continuous Integration, Continuous Delivery, DevopsReviewsFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)5 stars76.47%4 stars22.05%2 stars1.47%JMApr 23, 2022Filled StarFilled StarFilled StarFilled StarFilled StarGood information with even greater examples, good documentation links to go on.Helpful?AWAug 8, 2022Filled StarFilled StarFilled StarFilled StarFilled StarI'm so hooked on this training directly from AWS professionalsHelpful?From the lessonWeek 2This week, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.Week 2 Introduction3:22Infrastructure as Code6:49Automating the Creation of the Pipeline5:22Troubleshooting AWS CloudFormation4:22Introduction to Exercise 32:23Taught ByRafael LopesPrincipal Cloud TechnologistRussell SayersSenior Cloud TechnologistAlana LaytonTechnical Curriculum DeveloperTry the Course for FreeTranscriptSelect a languageEnglish- [Raf] Hi there, I'm Raf.  In the previous videos, Alana started the conversation  about continuous integration,  and the AWS Services you can use  to leverage a way to develop something  in a collaborative manner, from the source code  to build and test.  She also talked about CodePipeline,  the AWS service that can be used  to orchestrate your continuous integration workflow,  stitching together in CodeCommit and CodeBuild,  to automatically have the build done,  and tested according to the pushes in the Git repository.  In this video, I am going to talk about the next steps,  to move your pipeline to the next level,  with the usage of infrastructure as code.  Logging in the AWS Management Console  and manually provisioning your environments  is not ideal due to many reasons.  It gets easier if you are the only one managing  a simple environment in your personal account,  but as you start working professionally with it,  as a part of our DevOps team,  it rapidly becomes more challenging.  Automation is key, and infrastructure as code  is the process of managing and provisioning environments  through code in a declarative way.  Let me ask Alana something, and you will understand  what I mean by using the word declarative here,  in the infrastructure-as-code context.  Alana, I have something to ask you.  What do you do when you go to a coffee shop,  looking for an espresso?  Option A. You ask the cashier,  I would like to have an espresso please,  or option B. You start giving detailed instructions  to the barista, in terms of what they should do  in order to get your espresso.  Like, you start giving instructions like,  getting the coffee beans,  grinding with a specific granularity, tamper,  put in the portafilter,  turn on the machine for 25 seconds, et cetera.  - [Alana] Well, if the barista is capable of  making an espresso, I would definitely prefer option A.  - [Raf] So do I, right?  That's what I mean by using infrastructure as code,  in a declarative way.  The reason why I am saying all of this,  is because since you can interact with AWS services  programmatically, by using the AWS SDKs or the AWS CLI,  you can create your infrastructure through shell scripts,  although it gives you more control,  because you are exactly specifying the very fine details,  of what you want.  It is way less convenient,  because you also need to concern with complexity,  such as managing changes, auditing, rollbacks,  in case of failures, infrastructure, consistency,  and much more.  AWS CloudFormation is a service  that allows you to declare your infrastructure  in a text file.  In that file, you say what you want,  pass it to the service,  and CloudFormation brews the coffee,  I mean, the environment, for you.  This file can be authored in JSON or YAML.  Once you input a file  and ask CloudFormation to create a stack,  CloudFormation starts creating the infrastructure for you.  In the CloudFormation nomenclature,  we call that file a template,  and infrastructure components, a stack.  So, a template is something you define,  and a stack is infrastructure that actually gets created.  This is what a CloudFormation template looks like.  The Resources part is where you declare  what AWS services you want.  If you want to create an S3 bucket,  you can declare a resource of the type, AWS::S3::Bucket.  The CloudFormation documentation  has a list of the supported properties  for every single AWS service that supports CloudFormation,  which has almost every service.  This is the documentation page  for the resource AWS::S3::Bucket.  I prefer using YAML because it's simple for me to read,  and you can see that a bucket can be created  simply by specifying the bucket name as a property.  All right, a CloudFormation template  can be as simple as that, just creating a bucket.  Pretty simple.  You can submit that to CloudFormation,  and ask it to create a stack out of it.  Once the stack finishes with no errors,  you will have the bucket created,  as declared in the template.  Now, here comes one of the coolest part.  What if, in addition to that S3 bucket,  you also want to have a DynamoDB table?  Pretty simple, you just edit the template,  add the resource, AWS::DynamoDB::Table,  and submit it again to CloudFormation.  But this time, you will do an update stack operation.  Update stacks are awesome.  CloudFormation receives the updates from the template,  and says: now, in addition to the bucket,  the user wants a DynamoDB table.  Let me create it, and voila.  It updates the infrastructure for you.  Same thing with deletions.  If you want to remove something from your infrastructure,  you can remove from the template and do an update stack.  CloudFormation will calculate the delta,  and make the infrastructure match  what is desired on the template.  - [Alana] But Raf, S3 buckets and DynamoDB tables  may contain data from your users.  What if you want to delete a stack,  but retain some of the resources?  Because when you delete a stack,  CloudFormation will erase all the resources  associated with the stack,  and sometimes you want to erase some resources,  but not others, right?  - [Raf] That's right.  When you delete a stack, CloudFormation  erases every resource defined on that stack.  And that's why some of the resources  allow you to define an action when you delete this stack.  For example, this S3 bucket has a deletion policy  defined as Retain,  which will make CloudFormation reserve  that specific resource upon stack deletion.  The usage of this is actually a best practice  every time you define a resource  that will be used as a database, like an RDS instance,  an Elasticsearch cluster, or a DynamoDB table.  CloudFormation is very powerful.  We could spend hours and hours talking about its features,  but we have to move on in our DevOps journey.  So I strongly recommend you taking a look  at the CloudFormation documentation.  Having the ability to write a template  and have the infrastructure created is super powerful.  Since we are talking about having a CI/CD pipeline,  you can have CloudFormation templates,  in a CodeCommit repository,  and whenever you do a push with a change,  CodePipeline orchestrates the environment change  by executing an update stack as part of the deployment.  When we start doing this practice,  we have developers operating the infrastructure,  and this is actually where the word DevOps come from,  developers who also operate.  And because developers are good with code,  when we talk about infrastructure as code,  developers are the expert.Explore our CatalogJoin for free and get personalized recommendations, updates and offers.Get Started

Coursera FooterStart or advance your careerGoogle Data AnalystGoogle Digital Marketing & E-commerce Professional CertificateGoogle IT Automation with Python Professional CertificateGoogle IT SupportGoogle Project ManagementGoogle UX DesignPreparing for Google Cloud Certification: Cloud ArchitectIBM Cybersecurity AnalystIBM Data AnalystIBM Data EngineeringIBM Data ScienceIBM Full Stack Cloud DeveloperIBM Machine LearningIntuit BookkeepingMeta Front-End DeveloperDeepLearning.AI TensorFlow Developer Professional CertificateSAS Programmer Professional CertificateLaunch your careerPrepare for a certificationAdvance your careerHow to Identify Python Syntax ErrorsHow to Catch Python ExceptionsSee all Programming TutorialsPopular Courses and CertificationsFree CoursesArtificial Intelligence CoursesBlockchain CoursesComputer Science CoursesCursos GratisCybersecurity CoursesData Analysis CoursesData Science CoursesEnglish Speaking CoursesFull Stack Web Development CoursesGoogle CoursesHuman Resources CoursesIT CoursesLearning English CoursesMicrosoft Excel CoursesProduct Management CoursesProject Management CoursesPython CoursesSQL CoursesAgile CertificationsCAPM CertificationCompTIA A+ CertificationData Analytics CertificationsScrum Master CertificationsSee all coursesPopular collections and articlesFree online courses you can finish in a dayPopular Free CoursesBusiness JobsCybersecurity JobsEntry-Level IT JobsData Analyst Interview QuestionsData Analytics ProjectsHow to Become a Data AnalystHow to Become a Project ManagerIT SkillsProject Manager Interview QuestionsPython Programming SkillsStrength and Weakness in InterviewWhat Does a Data Analyst DoWhat Does a Software Engineer DoWhat Is a Data EngineerWhat Is a Data ScientistWhat Is a Product DesignerWhat Is a Scrum MasterWhat Is a UX ResearcherHow to Get a PMP CertificationPMI CertificationsPopular Cybersecurity CertificationsPopular SQL CertificationsRead all Coursera ArticlesEarn a degree or certificate onlineGoogle Professional CertificatesProfessional CertificatesSee all certificatesBachelor's DegreesMaster's DegreesComputer Science DegreesData Science DegreesMBA & Business DegreesData Analytics DegreesPublic Health DegreesSocial Sciences DegreesManagement DegreesBA vs BS DegreeWhat is a Bachelor's Degree?11 Good Study Habits to DevelopHow to Write a Letter of Recommendation10 In-Demand Jobs You Can Get with a Business DegreeIs a Master's in Computer Science Worth it?See all degree programsCoursera IndiaCoursera UKCoursera MexicoCourseraAboutWhat We OfferLeadershipCareersCatalogCoursera PlusProfessional CertificatesMasterTrackÂ® CertificatesDegreesFor EnterpriseFor GovernmentFor CampusBecome a PartnerCoronavirus ResponseCommunityLearnersPartnersBeta TestersTranslatorsBlogTech BlogTeaching CenterMorePressInvestorsTermsPrivacyHelpAccessibilityContactArticlesDirectoryAffiliatesModern Slavery StatementLearn AnywhereÂ© 2023 Coursera Inc. All rights reserved.