Troubleshooting AWS CloudFormation - Week 2 | Coursera





ExploreOnline DegreesDegreesOnline DegreeExplore Bachelorâs & Masterâs degreesMasterTrackâ¢Earn credit towards a Masterâs degreeUniversity CertificatesAdvance your career with graduate-level learningFind your New CareerFor EnterpriseFor UniversitiesBrowseTop CoursesLog InJoin for FreeListTroubleshooting AWS CloudFormationLoading...DevOps on AWS: Release and DeployAmazon Web ServicesFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)Â |Â 7.8K Students EnrolledCourse 3 of 4 in the DevOps on AWS SpecializationEnroll for FreeThis CourseVideo TranscriptAWS provides a set of flexible services designed to enable companies to more rapidly and reliably build and deliver products using AWS and DevOps practices. These services simplify provisioning and managing infrastructure, deploying application code, automating software release processes, and monitoring your application and infrastructure performance. 

The third course in the series explains how to improve the deployment process with DevOps methodology, and also some tools that might make deployments easier, such as Infrastructure as Code, or IaC, and AWS CodeDeploy.

The course begins with reviewing topics covered in the first course of the DevOps on AWS series. You will learn about the differences between continuous integration, continuous delivery, and continuous deployment. In Exercises 1 and 2, you will set up AWS CodeDeploy and make revisions that will then be deployed. If you use AWS Lambda, you will explore ways to address additional considerations when you deploy updates to your Lambda functions.

Next, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.View SyllabusSkills You'll Learnaws, Continuous Integration, Continuous Delivery, DevopsReviewsFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)5 stars76.47%4 stars22.05%2 stars1.47%JMApr 23, 2022Filled StarFilled StarFilled StarFilled StarFilled StarGood information with even greater examples, good documentation links to go on.Helpful?AWAug 8, 2022Filled StarFilled StarFilled StarFilled StarFilled StarI'm so hooked on this training directly from AWS professionalsHelpful?From the lessonWeek 2This week, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.Week 2 Introduction3:22Infrastructure as Code6:49Automating the Creation of the Pipeline5:22Troubleshooting AWS CloudFormation4:22Introduction to Exercise 32:23Taught ByRafael LopesPrincipal Cloud TechnologistRussell SayersSenior Cloud TechnologistAlana LaytonTechnical Curriculum DeveloperTry the Course for FreeTranscriptSelect a languageEnglish- [Raf] Hi, it's me again, Raf here.  So, according to everything you have learned so far,  CloudFormation is an infrastructure-as-code service  that you can rely in order to build  your infrastructure automations.  CloudFormation is one of the core components  of almost every CI/CD workflow, and you would like  to make sure your CloudFormation templates  are as reliable as possible.  In most cases, when the creation of a stack fails,  you will see a detailed error from CloudFormation pointing  out where the issue potentially is.  The most common error is due to permissions.  Resources created or deleted by your stack get operated  on behalf of the user who is operating the stack,  so if you have a template that creates an EC2 instance,  but your user is not authorized to do so,  that step will fail, and if the stack creation is set  to rollback in case of failure, everything created so far  will be deleted to leave the infrastructure  in a consistent state.  Another aspect I would like to highlight  is that CloudFormation is a service that operates  the resources in the given Region  where the stack is running.  So if you create a stack in us-east-1, or Virginia,  the resources will be created in that Region.  That being said, some services require a property  that only exists in a specific Region, such as, for example,  EC2 instances and their AMIs.  The Amazon Machine Image, or AMI, is the image containing  the operating system of the EC2 instance you want to create.  Each AMI has an ID, and these IDs are different according  to the Region you are operating in.  If you want to create an EC2 instance  and hardcode the AMI ID into the template,  you would need to make sure that the specific AMI ID exists  in the Region you are creating.  Otherwise, the creation would fail because CloudFormation  would be trying to launch an instance with an AMI  that does not exist in that Region.  CloudFormation has a feature that makes  the templates more reliable in terms of cross-Region.  So, if you want to build a template that can run  on any given Region, you can use a CloudFormation mapping.  A mapping is a feature that allows you  to choose different values according to each Region  you are running, or any other value.  Imagine the mapping as an if statement.  For example, if you are running the template in us-east-1,  then use this specific AMI ID.  If you're running in us-west-2, then use that other one.  That would fix that problem and make  your templates more resilient.  That can also be applied for parameters,  such as if a parameter has environment = prod,  then choose a specific instance type.  If the parameter has environments = dev,  then choose another instance type,  which could be a smaller one.  Okay, cool.  With the use of mappings, you can create  a more flexible template, but how about  the resource-creation sequence?  For example, what if you have an application that needs  an RDS database up and running before creating  the EC2 instance?  Another common troubleshooting topic  is the dependency error.  As the name suggests, a dependency error  is when CloudFormation tries to create a resource  that depends on another resource  that hasn't been created yet.  CloudFormation creates the resources in parallel  to optimize speed, but it may not know the order  of precedence needed by your application logic.  You can add a property called DependsOn in the creation  of the EC2 instance.  That would make CloudFormation hold the creation  of the instance, and only do it after the RDS instance  has been created.  In the property, you can specify one or multiple resources  you want to depend on.  If you're doing serverless, dependency between resources may  be more frequent, such as creating an API Gateway endpoint  and Lambda functions associated with it.  That's why the usage of SAM,  or Serverless Application Model,  brings you good help, because it is an abstraction layer  that gives you a serverless-oriented view,  so it already knows some obvious  dependencies among resources.  There are also other troubleshooting topics described  in the AWS documentation, but you guess what?  Alana told me she will add that link to the course readings  so you don't miss anything.Explore our CatalogJoin for free and get personalized recommendations, updates and offers.Get Started

Coursera FooterStart or advance your careerGoogle Data AnalystGoogle Digital Marketing & E-commerce Professional CertificateGoogle IT Automation with Python Professional CertificateGoogle IT SupportGoogle Project ManagementGoogle UX DesignPreparing for Google Cloud Certification: Cloud ArchitectIBM Cybersecurity AnalystIBM Data AnalystIBM Data EngineeringIBM Data ScienceIBM Full Stack Cloud DeveloperIBM Machine LearningIntuit BookkeepingMeta Front-End DeveloperDeepLearning.AI TensorFlow Developer Professional CertificateSAS Programmer Professional CertificateLaunch your careerPrepare for a certificationAdvance your careerHow to Identify Python Syntax ErrorsHow to Catch Python ExceptionsSee all Programming TutorialsPopular Courses and CertificationsFree CoursesArtificial Intelligence CoursesBlockchain CoursesComputer Science CoursesCursos GratisCybersecurity CoursesData Analysis CoursesData Science CoursesEnglish Speaking CoursesFull Stack Web Development CoursesGoogle CoursesHuman Resources CoursesIT CoursesLearning English CoursesMicrosoft Excel CoursesProduct Management CoursesProject Management CoursesPython CoursesSQL CoursesAgile CertificationsCAPM CertificationCompTIA A+ CertificationData Analytics CertificationsScrum Master CertificationsSee all coursesPopular collections and articlesFree online courses you can finish in a dayPopular Free CoursesBusiness JobsCybersecurity JobsEntry-Level IT JobsData Analyst Interview QuestionsData Analytics ProjectsHow to Become a Data AnalystHow to Become a Project ManagerIT SkillsProject Manager Interview QuestionsPython Programming SkillsStrength and Weakness in InterviewWhat Does a Data Analyst DoWhat Does a Software Engineer DoWhat Is a Data EngineerWhat Is a Data ScientistWhat Is a Product DesignerWhat Is a Scrum MasterWhat Is a UX ResearcherHow to Get a PMP CertificationPMI CertificationsPopular Cybersecurity CertificationsPopular SQL CertificationsRead all Coursera ArticlesEarn a degree or certificate onlineGoogle Professional CertificatesProfessional CertificatesSee all certificatesBachelor's DegreesMaster's DegreesComputer Science DegreesData Science DegreesMBA & Business DegreesData Analytics DegreesPublic Health DegreesSocial Sciences DegreesManagement DegreesBA vs BS DegreeWhat is a Bachelor's Degree?11 Good Study Habits to DevelopHow to Write a Letter of Recommendation10 In-Demand Jobs You Can Get with a Business DegreeIs a Master's in Computer Science Worth it?See all degree programsCoursera IndiaCoursera UKCoursera MexicoCourseraAboutWhat We OfferLeadershipCareersCatalogCoursera PlusProfessional CertificatesMasterTrackÂ® CertificatesDegreesFor EnterpriseFor GovernmentFor CampusBecome a PartnerCoronavirus ResponseCommunityLearnersPartnersBeta TestersTranslatorsBlogTech BlogTeaching CenterMorePressInvestorsTermsPrivacyHelpAccessibilityContactArticlesDirectoryAffiliatesModern Slavery StatementLearn AnywhereÂ© 2023 Coursera Inc. All rights reserved.