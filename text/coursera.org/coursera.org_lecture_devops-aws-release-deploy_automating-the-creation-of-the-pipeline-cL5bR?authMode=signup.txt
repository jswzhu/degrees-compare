





ExploreOnline DegreesDegreesOnline DegreeExplore Bachelorâs & Masterâs degreesMasterTrackâ¢Earn credit towards a Masterâs degreeUniversity CertificatesAdvance your career with graduate-level learningFind your New CareerFor EnterpriseFor UniversitiesBrowseTop CoursesLog InJoin for FreeListAutomating the Creation of the PipelineLoading...DevOps on AWS: Release and DeployAmazon Web ServicesFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)Â |Â 7.8K Students EnrolledCourse 3 of 4 in the DevOps on AWS SpecializationEnroll for FreeThis CourseVideo TranscriptAWS provides a set of flexible services designed to enable companies to more rapidly and reliably build and deliver products using AWS and DevOps practices. These services simplify provisioning and managing infrastructure, deploying application code, automating software release processes, and monitoring your application and infrastructure performance. 

The third course in the series explains how to improve the deployment process with DevOps methodology, and also some tools that might make deployments easier, such as Infrastructure as Code, or IaC, and AWS CodeDeploy.

The course begins with reviewing topics covered in the first course of the DevOps on AWS series. You will learn about the differences between continuous integration, continuous delivery, and continuous deployment. In Exercises 1 and 2, you will set up AWS CodeDeploy and make revisions that will then be deployed. If you use AWS Lambda, you will explore ways to address additional considerations when you deploy updates to your Lambda functions.

Next, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.View SyllabusSkills You'll Learnaws, Continuous Integration, Continuous Delivery, DevopsReviewsFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)5 stars76.47%4 stars22.05%2 stars1.47%JMApr 23, 2022Filled StarFilled StarFilled StarFilled StarFilled StarGood information with even greater examples, good documentation links to go on.Helpful?AWAug 8, 2022Filled StarFilled StarFilled StarFilled StarFilled StarI'm so hooked on this training directly from AWS professionalsHelpful?From the lessonWeek 2This week, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.Week 2 Introduction3:22Infrastructure as Code6:49Automating the Creation of the Pipeline5:22Troubleshooting AWS CloudFormation4:22Introduction to Exercise 32:23Taught ByRafael LopesPrincipal Cloud TechnologistRussell SayersSenior Cloud TechnologistAlana LaytonTechnical Curriculum DeveloperTry the Course for FreeTranscriptSelect a languageEnglish- [Alana] As Raf and I mentioned earlier,  a pipeline is also programmable infrastructure.  For example, take CodeDeploy.  In Exercise 2 of the course, you created an application  and a deployment group in the console manually.  While you were doing that, I created an application  and deployment group in a CloudFormation template.  Here's what it looks like.  We have our application declared at the top  of the screen, here.  We gave it a name and we also determined  that we're deploying to Amazon EC2 as our compute platform.  So overall, six lines of code to declare  this resource. Not bad.  If I scroll down, you can also see my deployment group  and all of its properties.  So, not only do we have the name of the deployment group,  which application it belongs to, our configuration settings,  and the deployment style, we also declare  which EC2 instance we'll be deploying to, in this case,  the instance that's tagged as CodePipelineBlog.  And you can also see that it references the application,  so that means when I run this template through  the CloudFormation console, CloudFormation won't build  the deployment group until after it builds the application.  This makes sense because we need an application before  we can create a deployment group.  I also, in the same template, created a service role  for CodeDeploy and an EC2 instance that has  the CodeDeploy agents installed.  So basically, everything you did in Exercise 1 and 2  is now in this one template.  To build off of all that, I also created all  the other components of a pipeline,  including CodeCommit and CodeBuild.  And then, I created a code pipeline  with a source stage,  a deploy stage, and an acceptance test stage.  So, let's see this run.  I'll go to the AWS Management Console,  search for CloudFormation,  click Create stack,  upload this template file called final_pipeline,  and click Next.  Here, I'll have to name the stack.  I'll call it final-pipeline-stack,  and then, I'll call the pipeline, final-pipeline.  So, I'll go ahead and keep all the other defaults,  click Next, keep the defaults again, and Next again,  acknowledge that it might create IAM resources,  and click Create stack.  However, I've already created this CloudFormation stack  earlier to save us some waiting time,  which is why we got this error here,  so I'll go ahead and cancel out of this,  and click on the stack that I created earlier  to find all of its resources.  All right, so this CloudFormation template  has already been provisioned and everything looks good,  and if I click on this Resources tab here,  we can see all the resources that were created  when I ran this template.  So, let's jump over to our pipeline that was created  by this template by going to the CodePipeline console.  As you can see, the pipeline has already started running,  but here's what happened behind the scenes.  If I go back to the template, when I wrote the code  to create CodeCommit,  as you can see here,  I chose to propagate the repo with code from an S3 bucket.  So, the commit was made, which kicked off the deployment,  which if I go back to the console, I can see has succeeded.  If I click on the Details and scroll down,  I can find that the instance that it deployed  to is right here, so I'll go ahead and click it,  which brings me to the EC2 console.  Select the instance, copy the public IP address,  and paste it into my browser.  And it looks like the deploy worked!  My app is up and running.  Okay. let's go back to the pipeline and see the final stage,  the acceptance test.  All this test does is access the instance  and check if it can access the landing page.  If we click Details of this stage,  we can look at the commands we ran in the buildspec  and the output of those commands.  As you can see here, it pulls the HTML from our landing page  and that's exactly what we wanted to accomplish,  so everything looks good.  So that's how I automated a pipeline with CloudFormation.  If you're looking for this template to download  so you can try it yourself, I'll be providing it to you  in Exercise 3 of the course, along with  the buildspec file, the AppSpec file, and the app itself.  Now, if I wanted to take it a step further,  I could change the HTML file and commit it to my repo,  kicking off the pipeline once again,  and see my changes in real time,  but you'll be doing that in the next exercise,  so see you soon.Explore our CatalogJoin for free and get personalized recommendations, updates and offers.Get Started

Coursera FooterStart or advance your careerGoogle Data AnalystGoogle Digital Marketing & E-commerce Professional CertificateGoogle IT Automation with Python Professional CertificateGoogle IT SupportGoogle Project ManagementGoogle UX DesignPreparing for Google Cloud Certification: Cloud ArchitectIBM Cybersecurity AnalystIBM Data AnalystIBM Data EngineeringIBM Data ScienceIBM Full Stack Cloud DeveloperIBM Machine LearningIntuit BookkeepingMeta Front-End DeveloperDeepLearning.AI TensorFlow Developer Professional CertificateSAS Programmer Professional CertificateLaunch your careerPrepare for a certificationAdvance your careerHow to Identify Python Syntax ErrorsHow to Catch Python ExceptionsSee all Programming TutorialsPopular Courses and CertificationsFree CoursesArtificial Intelligence CoursesBlockchain CoursesComputer Science CoursesCursos GratisCybersecurity CoursesData Analysis CoursesData Science CoursesEnglish Speaking CoursesFull Stack Web Development CoursesGoogle CoursesHuman Resources CoursesIT CoursesLearning English CoursesMicrosoft Excel CoursesProduct Management CoursesProject Management CoursesPython CoursesSQL CoursesAgile CertificationsCAPM CertificationCompTIA A+ CertificationData Analytics CertificationsScrum Master CertificationsSee all coursesPopular collections and articlesFree online courses you can finish in a dayPopular Free CoursesBusiness JobsCybersecurity JobsEntry-Level IT JobsData Analyst Interview QuestionsData Analytics ProjectsHow to Become a Data AnalystHow to Become a Project ManagerIT SkillsProject Manager Interview QuestionsPython Programming SkillsStrength and Weakness in InterviewWhat Does a Data Analyst DoWhat Does a Software Engineer DoWhat Is a Data EngineerWhat Is a Data ScientistWhat Is a Product DesignerWhat Is a Scrum MasterWhat Is a UX ResearcherHow to Get a PMP CertificationPMI CertificationsPopular Cybersecurity CertificationsPopular SQL CertificationsRead all Coursera ArticlesEarn a degree or certificate onlineGoogle Professional CertificatesProfessional CertificatesSee all certificatesBachelor's DegreesMaster's DegreesComputer Science DegreesData Science DegreesMBA & Business DegreesData Analytics DegreesPublic Health DegreesSocial Sciences DegreesManagement DegreesBA vs BS DegreeWhat is a Bachelor's Degree?11 Good Study Habits to DevelopHow to Write a Letter of Recommendation10 In-Demand Jobs You Can Get with a Business DegreeIs a Master's in Computer Science Worth it?See all degree programsCoursera IndiaCoursera UKCoursera MexicoCourseraAboutWhat We OfferLeadershipCareersCatalogCoursera PlusProfessional CertificatesMasterTrackÂ® CertificatesDegreesFor EnterpriseFor GovernmentFor CampusBecome a PartnerCoronavirus ResponseCommunityLearnersPartnersBeta TestersTranslatorsBlogTech BlogTeaching CenterMorePressInvestorsTermsPrivacyHelpAccessibilityContactArticlesDirectoryAffiliatesModern Slavery StatementLearn AnywhereÂ© 2023 Coursera Inc. All rights reserved.