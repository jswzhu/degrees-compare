





ExploreOnline DegreesDegreesOnline DegreeExplore Bachelorâs & Masterâs degreesMasterTrackâ¢Earn credit towards a Masterâs degreeUniversity CertificatesAdvance your career with graduate-level learningFind your New CareerFor EnterpriseFor UniversitiesBrowseTop CoursesLog InJoin for FreeListWeek 2 IntroductionLoading...DevOps on AWS: Release and DeployAmazon Web ServicesFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)Â |Â 7.8K Students EnrolledCourse 3 of 4 in the DevOps on AWS SpecializationEnroll for FreeThis CourseVideo TranscriptAWS provides a set of flexible services designed to enable companies to more rapidly and reliably build and deliver products using AWS and DevOps practices. These services simplify provisioning and managing infrastructure, deploying application code, automating software release processes, and monitoring your application and infrastructure performance. 

The third course in the series explains how to improve the deployment process with DevOps methodology, and also some tools that might make deployments easier, such as Infrastructure as Code, or IaC, and AWS CodeDeploy.

The course begins with reviewing topics covered in the first course of the DevOps on AWS series. You will learn about the differences between continuous integration, continuous delivery, and continuous deployment. In Exercises 1 and 2, you will set up AWS CodeDeploy and make revisions that will then be deployed. If you use AWS Lambda, you will explore ways to address additional considerations when you deploy updates to your Lambda functions.

Next, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.View SyllabusSkills You'll Learnaws, Continuous Integration, Continuous Delivery, DevopsReviewsFilled StarFilled StarFilled StarFilled StarHalf-Filled Star4.7 (68 ratings)5 stars76.47%4 stars22.05%2 stars1.47%JMApr 23, 2022Filled StarFilled StarFilled StarFilled StarFilled StarGood information with even greater examples, good documentation links to go on.Helpful?AWAug 8, 2022Filled StarFilled StarFilled StarFilled StarFilled StarI'm so hooked on this training directly from AWS professionalsHelpful?From the lessonWeek 2This week, you will explore how infrastructure as code (IaC) helps organizations achieve automation, and which AWS solutions provide a DevOps-focused way of creating and maintaining infrastructure. In Exercise 3, you will be provided with an AWS CloudFormation template that will set up backend services, such as AWS CodePipeline, AWS CodeCommit, AWS CodeDeploy, and AWS CodeBuild. You will then upload new revisions to the pipeline.Week 2 Introduction3:22Infrastructure as Code6:49Automating the Creation of the Pipeline5:22Troubleshooting AWS CloudFormation4:22Introduction to Exercise 32:23Taught ByRafael LopesPrincipal Cloud TechnologistRussell SayersSenior Cloud TechnologistAlana LaytonTechnical Curriculum DeveloperTry the Course for FreeTranscriptSelect a languageEnglish- [Alana] Hey everyone, and welcome to the second  and final week of the course.  I know it's been a while, but I want you to think back  to the beginning of this course,  where we started out talking about a scenario  of a team of engineers.  The team wanted to use continuous delivery  and automate the creation of their deployments.  We also talked about why automation was a good practice  in general, as it removes human error  and increases speed and productivity.  In the exercises you completed in Week 1,  you manually created a test environment,  in this case an EC2 instance, to deploy your application to.  In this week, we get to take automation a step further,  and consider how to automate the creation  of those test environments, like our EC2 instance,  and any infrastructure that supports that,  such as IAM roles and a network.  In a real production system, we might also have other  environments we want to automate the creation of, as well.  Let's take the same scenario of a team of engineers  that are working on their pipeline and releasing code,  and they want to automate everything as much as possible.  Let's say that team hired a bunch of new developers  to work on their application, and now those developers  need development environments.  How do we get each new hire a development environment?  Do we: A. Hand the developer a document with requirements  and let the developers create it themselves?  Or B. Hand them a template of code to create  the environments with all configurations already set?  Well, the problem with answer A is that it's  a very manual process and we really need all development  environments to look the same.  It's possible, with human error,  the developer might misconfigure something,  which might lead to their environment being out of sync,  or even if they were to do everything  the document says correctly, it's possible that the document  itself is out of date or wrong.  There's too many issues with this option,  so let's talk about option B.  Handing over a template of code to build  the dev environments enables the team  to treat this environment like code,  meaning you can store it in version control.  You can do code reviews, and even ship  it through a pipeline, and that same template,  with some changes, can be used to create  your test environments and prod environments  so that every environment looks as similar as possible.  This idea of treating our infrastructure as code  is a fundamental principle of DevOps.  It enables your team to apply the same rigor  of application development to provisioning infrastructure.  During this week, we'll talk about some  of the key services AWS offers that enable you  to properly use infrastructure as code,  which is also known as IaC.  These services will not only help your team provision  dev test and prod environments, but they can also enable you  to provision the entire pipeline itself,  and even think about your pipeline as code.  I know that's a little meta, but pretty soon,  every time you look at a piece of infrastructure  in the AWS Management Console, you'll think this can just be  a piece of code in a template, and thinking like that  will help you build your DevOps culture.  Get ready for Week 2, where we talk  infrastructure as code.Explore our CatalogJoin for free and get personalized recommendations, updates and offers.Get Started

Coursera FooterStart or advance your careerGoogle Data AnalystGoogle Digital Marketing & E-commerce Professional CertificateGoogle IT Automation with Python Professional CertificateGoogle IT SupportGoogle Project ManagementGoogle UX DesignPreparing for Google Cloud Certification: Cloud ArchitectIBM Cybersecurity AnalystIBM Data AnalystIBM Data EngineeringIBM Data ScienceIBM Full Stack Cloud DeveloperIBM Machine LearningIntuit BookkeepingMeta Front-End DeveloperDeepLearning.AI TensorFlow Developer Professional CertificateSAS Programmer Professional CertificateLaunch your careerPrepare for a certificationAdvance your careerHow to Identify Python Syntax ErrorsHow to Catch Python ExceptionsSee all Programming TutorialsPopular Courses and CertificationsFree CoursesArtificial Intelligence CoursesBlockchain CoursesComputer Science CoursesCursos GratisCybersecurity CoursesData Analysis CoursesData Science CoursesEnglish Speaking CoursesFull Stack Web Development CoursesGoogle CoursesHuman Resources CoursesIT CoursesLearning English CoursesMicrosoft Excel CoursesProduct Management CoursesProject Management CoursesPython CoursesSQL CoursesAgile CertificationsCAPM CertificationCompTIA A+ CertificationData Analytics CertificationsScrum Master CertificationsSee all coursesPopular collections and articlesFree online courses you can finish in a dayPopular Free CoursesBusiness JobsCybersecurity JobsEntry-Level IT JobsData Analyst Interview QuestionsData Analytics ProjectsHow to Become a Data AnalystHow to Become a Project ManagerIT SkillsProject Manager Interview QuestionsPython Programming SkillsStrength and Weakness in InterviewWhat Does a Data Analyst DoWhat Does a Software Engineer DoWhat Is a Data EngineerWhat Is a Data ScientistWhat Is a Product DesignerWhat Is a Scrum MasterWhat Is a UX ResearcherHow to Get a PMP CertificationPMI CertificationsPopular Cybersecurity CertificationsPopular SQL CertificationsRead all Coursera ArticlesEarn a degree or certificate onlineGoogle Professional CertificatesProfessional CertificatesSee all certificatesBachelor's DegreesMaster's DegreesComputer Science DegreesData Science DegreesMBA & Business DegreesData Analytics DegreesPublic Health DegreesSocial Sciences DegreesManagement DegreesBA vs BS DegreeWhat is a Bachelor's Degree?11 Good Study Habits to DevelopHow to Write a Letter of Recommendation10 In-Demand Jobs You Can Get with a Business DegreeIs a Master's in Computer Science Worth it?See all degree programsCoursera IndiaCoursera UKCoursera MexicoCourseraAboutWhat We OfferLeadershipCareersCatalogCoursera PlusProfessional CertificatesMasterTrackÂ® CertificatesDegreesFor EnterpriseFor GovernmentFor CampusBecome a PartnerCoronavirus ResponseCommunityLearnersPartnersBeta TestersTranslatorsBlogTech BlogTeaching CenterMorePressInvestorsTermsPrivacyHelpAccessibilityContactArticlesDirectoryAffiliatesModern Slavery StatementLearn AnywhereÂ© 2023 Coursera Inc. All rights reserved.